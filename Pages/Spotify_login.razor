@inject IHttpContextAccessor httpContextAccessor

<h3>Spotify login</h3>

<PageTitle>Pluto - Home</PageTitle>

<input placeholder="username" @bind="m_username"/>
<input placeholder="password" type="password" @bind="m_password" @onkeyup="onEnterPassword"/>
<button @onclick="login" class="btn btn-primary">Login using spotify</button>

@code {
    private string? m_username;
    private string? m_password;

    private async Task requestAuthorisation() {
        UriBuilder requestEndpoint = new UriBuilder("https://accounts.spotify.com/authorize");
        var query = System.Web.HttpUtility.ParseQueryString(requestEndpoint.Query);
        query["client_id"] = "c1ef89ce68114eb5883d82588b971f39";
        query["response_type"] = "code";
        query["redirect_uri"] = "localhost:5048";
        query["scope"] = "playlist-read-private playlist-modify-private playlist-modify-public user-top-read user-read-recently-played user-library-read";
        query["state"] = "ABCDEFGHIJKLMNOP"; //need a better way to do this
        requestEndpoint.Query = query.ToString();
        HttpClient spotifyClient = new HttpClient();
        HttpResponseMessage response = await spotifyClient.GetAsync(requestEndpoint.ToString());
        Console.WriteLine(requestEndpoint.ToString());
        Console.WriteLine(response);
        httpContextAccessor.HttpContext.Response.Redirect(requestEndpoint.ToString(), false);
    }

    private void login()
    {
        //logic for login, will require way more work
        requestAuthorisation();
    }

    //If the user clicks enter, after passing in the password
    //do the login logic
    private void onEnterPassword( KeyboardEventArgs e )
    {
        if( e.Code == "Enter")
        {
            login();
        }
    }
}
